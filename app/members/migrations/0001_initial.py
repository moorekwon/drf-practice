# Generated by Django 2.2.11 on 2020-03-20 08:26

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('amantha', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(choices=[('남자', '남자'), ('여자', '여자')], max_length=6)),
                ('img_profile', models.ImageField(blank=True, upload_to='user_images/', verbose_name='프로필 이미지')),
                ('university', models.CharField(blank=True, max_length=30)),
                ('major', models.CharField(blank=True, max_length=30)),
                ('job', models.CharField(blank=True, max_length=30)),
                ('company', models.CharField(blank=True, max_length=30)),
                ('location', models.CharField(max_length=30)),
                ('birth', models.DateField(null=True)),
                ('height', models.PositiveIntegerField(blank=True)),
                ('body_type', models.CharField(choices=[('슬림한', '슬림한'), ('뚱뚱한', '뚱뚱한')], max_length=10)),
                ('personality', models.CharField(choices=[('착한', '착한'), ('엉뚱한', '엉뚱한')], max_length=10)),
                ('blood_type', models.CharField(choices=[('AB', 'AB'), ('B', 'B'), ('A', 'A'), ('O', 'O')], max_length=6)),
                ('smoking', models.BooleanField()),
                ('drinking', models.CharField(choices=[('안 마심', '안 마심'), ('가끔 마심', '가끔 마심'), ('많이 마심', '많이 마심')], max_length=10)),
                ('introduction', models.TextField(blank=True, max_length=150)),
                ('select_stories', models.CharField(choices=[('1번', '1번'), ('2번', '2번'), ('3번', '3번'), ('4번', '4번')], max_length=60)),
                ('story_comments', models.CharField(blank=True, max_length=100)),
                ('select_tags', models.CharField(choices=[('연애 스타일', '연애 스타일'), ('데이트 스타일', '데이트 스타일'), ('나만의 매력', '나만의 매력'), ('라이프 스타일', '라이프 스타일')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('star_rating', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_star', to='amantha.SendStar')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
